[project]
name = "algo_trading_platform"
version = "0.1.0"
description = "A set of microservices for algorithmic trading"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp==3.12.3",
    "environs==14.2.0",
    "pydantic>=2.5.2",
    "pydantic-settings>=2.8.0",
    "python-dotenv>=1.0.0",
    "faststream[rabbit]>=0.4.5",
    "dishka>=0.3.0",
    "uuid7==0.1.0",
    "faststream[cli]",
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[project.optional-dependencies]
consumer = [
    "sqlalchemy>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.10",
    "greenlet>=3.0.1",
]

producer = ["numpy>=1.26.2", "pandas>=2.1.3", "ta>=0.10.2"]

migrator = ["sqlalchemy>=2.0.23", "alembic>=1.13.0", "psycopg2-binary>=2.9.10"]

scheduler = ["taskiq==0.11.18", "taskiq_faststream==0.2.3"]

dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "sqlalchemy[mypy]>=2.0.23",
    "pre-commit>=4.2.0",
]
[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "uuid_extensions.*"
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 120
target-version = "py312"
ignore = ["E501"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.pytest.ini_options]
addopts = "-q"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
pythonpath = [".", "src"]
testpaths = ["tests"]
